{"mappings":"AE0CA,IAAA,EA1CA,SAAS,EAAmB,CAAS,MA8BnB,EA7BhB,IAAI,EAAa,GA0BjB,MAxBI,AAAuB,YAAvB,EAAU,QAAA,EACZ,GAAc,CAAC,CAAC,EAAE,EAAU,OAAA,CAAQ,CAAC,CAEjC,EAAU,UAAA,EACZ,EAAU,UAAA,CAAW,OAAA,CAAQ,AAAA,IAC3B,GAAc,CAAC,CAAC,EAAE,EAAK,IAAA,CAAK,EAAE,EAAE,EAAK,KAAA,CAAM,CAAC,CAAC,AAC/C,GAGF,GAAc,IAEV,EAAU,QAAA,EACZ,EAAU,QAAA,CAAS,OAAA,CAAQ,AAAA,IACzB,GAAc,EAAmB,EACnC,GAGF,QAAQ,GAAA,CAAI,GACZ,GAcF,AAAI,AAJ4B,CAC9B,MAAO,QAAS,KAAM,KACvB,CAE2B,QAAA,CALZ,EATS,EAAU,OAAjC,EAeO,GAGF,CAAC,EAAE,EAAE,EAAI,CAAC,CAAC,EAhBgB,SAAvB,EAAU,QAAA,EACnB,CAAA,GAAc,EAAU,KAD1B,AAAA,EAIO,CACT,ED1BA,MAAM,EAAe,SAAS,aAAA,CAAc,UACtC,EAAgB,SAAS,aAAA,CAAc,WACvC,EAAS,SAAS,aAAA,CAAc,UAEtC,CAAA,EAAa,KAAA,CAAQ,GAErB,EAAa,gBAAA,CAAiB,QAAS,AAAC,IACR,KAA1B,EAAE,aAAA,CAAc,KAAA,EAClB,EAAc,SAAA,CAAU,GAAA,CAAI,oBAEhC,GACA,EAAO,gBAAA,CAAiB,QAGxB,SAAqB,CAAC,EACpB,IAAM,EAAgB,EAAa,KAAnC,CACA,GAAK,GAEL,EAAc,SAAA,CAAU,MAAA,CAAO,qBAE/B,GAAI,CACF,GAAM,CAAE,IAAK,CAAS,CAAE,CAAG,KAAK,KAAA,CAAM,GAChC,EAAa,AAAA,EAAmB,EACtC,CAAA,EAAc,WAAA,CAAc,CAC9B,CAAE,MAAO,EAAK,CACZ,EAAc,WAAA,CAAc,EAAI,OAAhC,AACF,EACF","sources":["<anon>","src/app.js","src/modules/convertASTToString.js"],"sourcesContent":["function $954151ff3c71955a$var$convertASTToString(astObject) {\n    let htmlString = \"\";\n    if (astObject.nodeType === \"element\") {\n        htmlString += `<${astObject.tagName}`;\n        if (astObject.attributes) astObject.attributes.forEach((attr)=>{\n            htmlString += ` ${attr.name}=\"${attr.value}\"`;\n        });\n        htmlString += \">\";\n        if (astObject.children) astObject.children.forEach((child)=>{\n            htmlString += $954151ff3c71955a$var$convertASTToString(child);\n        });\n        console.log(astObject);\n        htmlString += $954151ff3c71955a$var$closeTag(astObject.tagName);\n    } else if (astObject.nodeType === \"text\") htmlString += astObject.value;\n    return htmlString;\n}\nfunction $954151ff3c71955a$var$closeTag(tag) {\n    const tagsForbiddenToBeClosed = [\n        \"img\",\n        \"input\",\n        \"br\",\n        \"hr\"\n    ];\n    if (tagsForbiddenToBeClosed.includes(tag)) return \"\";\n    return `</${tag}>`;\n}\nvar $954151ff3c71955a$export$2e2bcd8739ae039 = $954151ff3c71955a$var$convertASTToString;\n\n\nconst $e73bf42412feb220$var$inputMessage = document.querySelector(\".input\");\nconst $e73bf42412feb220$var$outputMessage = document.querySelector(\".output\");\nconst $e73bf42412feb220$var$button = document.querySelector(\"#button\");\n$e73bf42412feb220$var$inputMessage.value = \"\";\n$e73bf42412feb220$var$inputMessage.addEventListener(\"input\", (e)=>{\n    if (e.currentTarget.value === \"\") $e73bf42412feb220$var$outputMessage.classList.add(\"output-visibility\");\n});\n$e73bf42412feb220$var$button.addEventListener(\"click\", $e73bf42412feb220$var$showMessage);\nfunction $e73bf42412feb220$var$showMessage(e) {\n    const textareaValue = $e73bf42412feb220$var$inputMessage.value;\n    if (!textareaValue) return;\n    $e73bf42412feb220$var$outputMessage.classList.remove(\"output-visibility\");\n    try {\n        const { ast: astObject } = JSON.parse(textareaValue);\n        const htmlString = (0, $954151ff3c71955a$export$2e2bcd8739ae039)(astObject);\n        $e73bf42412feb220$var$outputMessage.textContent = htmlString;\n    } catch (err) {\n        $e73bf42412feb220$var$outputMessage.textContent = err.message;\n    }\n}\n\n\n//# sourceMappingURL=index.88e457e2.js.map\n","import convertASTToString from \"./modules/convertASTToString\";\r\n\r\nconst inputMessage = document.querySelector('.input');\r\nconst outputMessage = document.querySelector('.output');\r\nconst button = document.querySelector('#button')\r\n\r\ninputMessage.value = ''\r\n\r\ninputMessage.addEventListener('input', (e) => {\r\n  if (e.currentTarget.value === '') {\r\n    outputMessage.classList.add('output-visibility')\r\n  }\r\n})\r\nbutton.addEventListener('click', showMessage);\r\n\r\n\r\nfunction showMessage(e) {\r\n  const textareaValue = inputMessage.value\r\n  if (!textareaValue) return;\r\n\r\n  outputMessage.classList.remove('output-visibility')\r\n\r\n  try {\r\n    const { ast: astObject } = JSON.parse(textareaValue)\r\n    const htmlString = convertASTToString(astObject)\r\n    outputMessage.textContent = htmlString\r\n  } catch (err) {\r\n    outputMessage.textContent = err.message;\r\n  }\r\n}","function convertASTToString(astObject) {\r\n  let htmlString = ''\r\n\r\n  if (astObject.nodeType === 'element') {\r\n    htmlString += `<${astObject.tagName}`\r\n\r\n    if (astObject.attributes) {\r\n      astObject.attributes.forEach(attr => {\r\n        htmlString += ` ${attr.name}=\"${attr.value}\"`\r\n      })\r\n    }\r\n\r\n    htmlString += '>'\r\n\r\n    if (astObject.children) {\r\n      astObject.children.forEach(child => {\r\n        htmlString += convertASTToString(child)\r\n      })\r\n    }\r\n\r\n    console.log(astObject)\r\n    htmlString += closeTag(astObject.tagName)\r\n\r\n  } else if (astObject.nodeType === 'text') {\r\n    htmlString += astObject.value\r\n  }\r\n\r\n  return htmlString\r\n}\r\n\r\nfunction closeTag(tag) {\r\n  const tagsForbiddenToBeClosed = [\r\n    'img', 'input', 'br', 'hr'\r\n  ]\r\n\r\n  if (tagsForbiddenToBeClosed.includes(tag)) {\r\n    return ''\r\n  }\r\n\r\n  return `</${tag}>`\r\n}\r\n\r\nexport default convertASTToString"],"names":["$954151ff3c71955a$export$2e2bcd8739ae039","$954151ff3c71955a$var$convertASTToString","astObject","tag","htmlString","nodeType","tagName","attributes","forEach","attr","name","value","children","child","console","log","tagsForbiddenToBeClosed","includes","$e73bf42412feb220$var$inputMessage","document","querySelector","$e73bf42412feb220$var$outputMessage","$e73bf42412feb220$var$button","addEventListener","e","currentTarget","classList","add","textareaValue","remove","ast","JSON","parse","textContent","err","message"],"version":3,"file":"index.88e457e2.js.map"}